{"version":3,"sources":["componentes/Formulario.js","componentes/Cancion.js","componentes/Informacion.js","App.js","serviceWorker.js","index.js"],"names":["Formulario","consultarAPILetra","useState","artista","cancion","busqueda","agregarBusqueda","actualizarState","e","target","name","value","className","onSubmit","preventDefault","type","placeholder","onChange","required","Cancion","letra","length","Informacion","info","Object","keys","src","strArtistThumb","alt","strGenre","strBiographyES","href","strFacebook","rel","strTwitter","strLastFMChart","App","agregarArtista","agregarLetra","agregarInfo","useEffect","a","async","url","axios","resultado","data","artists","consultarAPIInfo","lyrics","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2eaa0a8d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Formulario({consultarAPILetra})\r\n{\r\n   \r\n    const [busqueda, agregarBusqueda] = useState({\r\n        artista: '',\r\n        cancion: ''\r\n    });\r\n\r\n     //FUNCION PARA ACTUALIZAR LOS STATES DE LOS INPUT\r\n     const actualizarState = e => \r\n     {\r\n        agregarBusqueda({\r\n             ...busqueda,\r\n             [e.target.name] : e.target.value\r\n             //e.target.name = input name, mismo nombre en las variables.\r\n         });\r\n     }\r\n\r\n    //CUANDO HACEMOS SUBMIT DESDE EL FORMULARIO\r\n     const enviarInformacion = e =>\r\n     {\r\n         e.preventDefault();\r\n        consultarAPILetra(busqueda);\r\n     }\r\n\r\n    return (\r\n        <div className=\"bg-info\">\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <form \r\n                    onSubmit={enviarInformacion}\r\n                    className=\"col card text-white bg-transparent  mb-5 pt-5 pb-2\">\r\n                      <fieldset>\r\n                          <legend className=\"text-center\">Buscador Letras Canciones</legend>\r\n                          <div className=\"row\">\r\n                              <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Artista</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"artista\" \r\n                                        placeholder=\"Nombre Artista\" \r\n                                        onChange={actualizarState}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Canción</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"cancion\" \r\n                                        placeholder=\"Nombre Canción\" \r\n                                        onChange={actualizarState}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                              </div>\r\n                          </div>\r\n                          <button type=\"submit\" className=\"btn btn-primary float-right\">Buscar</button>\r\n                      </fieldset>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Formulario;\r\n","import React, { Fragment } from 'react'\r\n\r\nfunction Cancion({letra})\r\n{\r\n\r\n    if(letra.length === 0) return null;\r\n\r\n    return (\r\n           <Fragment>\r\n                <h2> Lyrics </h2>\r\n                <p className=\"letra\"> {letra} </p>\r\n           </Fragment>\r\n        )\r\n}\r\n\r\nexport default Cancion;","import React from 'react';\r\n\r\nfunction Informacion({info}) \r\n{\r\n\r\n    if(Object.keys(info).length === 0) return null;\r\n    \r\n    return (\r\n        <div className=\"card border-light\">\r\n            <div className=\"card-header bg-primary text-light font-weight-bold\">\r\n                Información Artista\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <img src={info.strArtistThumb} alt=\"Logo Artista\" />\r\n                <p className=\"card-text\">Género: {info.strGenre}</p>\r\n                <h2 className=\"card-text text-center\">Biografía</h2>\r\n                <p className=\"card-text\">{info.strBiographyES}</p>\r\n                <p className=\"card-text\">\r\n                    <a href={`https://${info.strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-facebook\"></i>\r\n                    </a>\r\n                    <a href={`https://${info.strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                    <a href={`${info.strLastFMChart}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-lastfm\"></i>\r\n                    </a>\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Informacion;","import React, { useState, useEffect, Fragment } from 'react';\nimport Formulario from './componentes/Formulario';\nimport axios from 'axios';\nimport Cancion from './componentes/Cancion';\nimport Informacion from './componentes/Informacion';\n\nfunction App()\n{\n\n  const [artista, agregarArtista] = useState('');\n  const [letra, agregarLetra] = useState([]);\n  const [info, agregarInfo] = useState({});\n\n  //METODO PARA CONSULTAR LA API DE LETRAS DE CANCIONES\n  const consultarAPILetra = async busqueda =>\n  {\n    const {artista, cancion} = busqueda;\n    const url = `https://api.lyrics.ovh/v1/${artista}/${cancion}`;\n    \n    const resultado = await axios(url);\n\n    //ALMACENAR EL ARTISTA BUSCADO\n    agregarArtista(artista);\n    \n    //ALMACENAMOS LA LETRA EN EL STATE:\n    agregarLetra(resultado.data.lyrics);\n  }\n\n  //METODO PARA CONSULTAR API DE LA BANDA\n  const consultarAPIInfo = async () =>\n  {\n    if(artista)\n    {\n      const url = `https://theaudiodb.com/api/v1/json/1/search.php?s=${artista}`;\n      const resultado = await axios(url);    \n      agregarInfo(resultado.data.artists[0]);\n      // console.log(info);\n    }\n  }\n\n  useEffect(\n    () => \n    {\n      consultarAPIInfo();\n    }, [artista])\n\n\n  return (\n            <Fragment>\n                <Formulario\n                consultarAPILetra={consultarAPILetra}\n                />\n\n                <div className=\"container mt-5\">\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                             <Informacion\n                                  info={info}\n                             />\n                        </div>\n                        <div className=\"col-md-6\">\n                              <Cancion\n                                  letra={letra}\n                              />\n                        </div>\n                      </div>\n                </div>\n            </Fragment>\n  \n  \n  \n    )\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}